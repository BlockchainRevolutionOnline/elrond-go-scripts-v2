#!/bin/bash
set -e

#Prerequisites function
function prerequisites {
  echo -e
  echo -e "${GREEN}Updating system & installing some dependencies...${NC}"
  echo -e
  sudo apt -qq update  && sudo apt -y upgrade
  sudo apt -qq -y install gcc git make
  echo -e "${GREEN}Task completed.${NC}"
  echo -e
}


function paths {
  # Export environment variables
  export GOPATH=$HOME/go
  export PATH=$GOPATH/bin:$PATH
}

#Check if go is installed & install latest version
function go_lang {
if ! [ -x "$(command -v /snap/bin/go)" ];
  then
    #Get the latest version of GO for amd64 & installing it
    echo -e
    echo -e "${RED}GO is not installed on your system${NC}" 
    echo -e
    echo -e "${GREEN}Installing latest Go for you...${NC}"    
    sudo snap install go --classic
  else
    VERSION=$(go version)
    echo -e
    echo -e "${GREEN}GO is already installed: ${CYAN}$VERSION${NC}${GREEN}...skipping install${NC}"
  fi
}

#Clone the elrond-go & elrond-config repos from Github
function git_clone {

  #Clone the elrong-go & elrong-config repos
  echo -e
  echo -e "${GREEN}Cloning into ${CYAN}elrond-go${GREEN} with tag ${CYAN}$BINARYVER${GREEN}...${NC}"
  echo -e
  cd $GOPATH/src/github.com/ElrondNetwork && git clone https://github.com/ElrondNetwork/elrond-go && cd elrond-go && git checkout --force $BINARYVER
  
  echo -e
  echo -e "${GREEN}Cloning into ${CYAN}elrond-config${GREEN} with tag ${CYAN}$CONFIGVER${GREEN}...${NC}"
  echo -e
  cd $GOPATH/src/github.com/ElrondNetwork && git clone https://github.com/ElrondNetwork/elrond-config && cd elrond-config && git checkout --force $CONFIGVER
}


#Add systemd node service & syslogd logging
function systemd {

  #Create the service file for our node
  echo "[Unit]
  Description=Elrond Node 
  After=network-online.target
  
  [Service]
  User=node
  WorkingDirectory=/opt/node
  ExecStart=/opt/go/bin/node -use-log-view
  StandardOutput=journal
  StandardError=journal
  Restart=always
  RestartSec=3
  LimitNOFILE=4096
  
  [Install]
  WantedBy=multi-user.target" > elrond-node.service
  
  #Move files to appropriate locations & giving proper ownership
  sudo mv elrond-node.service /etc/systemd/system/
  sudo systemctl enable elrond-node.service
  
  #Limit journalctl size (temporary fix for large logs)
  echo 'SystemMaxUse=900M' | sudo tee -a /etc/systemd/journald.conf && echo 'SystemMaxFileSize=100M' | sudo tee -a /etc/systemd/journald.conf
  sudo systemctl restart systemd-journald
}

#Build the node from latest tag
function build_node {
  
  echo -e
  echo -e "${GREEN}Building your node from tag ${CYAN}$BINARYVER${GREEN}...${NC}"
  echo -e
  
  #Building the node from the elrond-go repo
  echo -e "${GREEN}Downloading go modules...${NC}"
  echo -e
  cd $GOPATH/src/github.com/ElrondNetwork/elrond-go && GO111MODULE=on /snap/bin/go mod vendor 1> /dev/null 2>&1
  
  echo -e "${GREEN}compiling binary...${NC}"
  echo -e
  cd cmd/node && /snap/bin/go build -i -v -ldflags="-X main.appVersion=$(git describe --tags --long --dirty)" 1> /dev/null 2>&1

}

function install {
  # Create a system user for running the service
  sudo useradd -m -d /opt/node --system --shell /usr/sbin/nologin node || echo "User already exists."
  sudo -u node mkdir -p /opt/node/config

  #Copy the binaries to /opt/go/bin/ & configs to /opt/node
  sudo mkdir -p /opt/go/bin
  sudo cp $GOPATH/src/github.com/ElrondNetwork/elrond-go/cmd/node/node /opt/go/bin/
  sudo cp $GOPATH/src/github.com/ElrondNetwork/elrond-config/* /opt/node/config 
}


function deploy_to_host {
    
  for HOST in $(cat target_ips) 
    do
      echo -e
      echo -e "${GREEN}Uploading scripts to host ${CYAN}$HOST${GREEN}...${NC}"
      echo -e
      rsync -avzhe "ssh -o StrictHostKeyChecking=no -i $PEM" $SCRIPTS_LOCATION $REMOTE_USER@$HOST:
    done
}

function node_name {
  echo -e
  echo -e "${GREEN}Time to choose a node name...${NC}"
  echo -e
  read -p "Choose a custom name (default elrond-community-validator): " NODE_NAME
  if [ "$NODE_NAME" = "" ]
  then
      NODE_NAME="elrond-community-validator"
  fi
  sudo sed -i 's/NodeDisplayName = ""/NodeDisplayName = "'$NODE_NAME'"/' /opt/node/config/prefs.toml
}


function cleanup {
  #Cleanup Logs, Stats & DB
  echo -e
  echo -e "${RED}Erasing previous node data (db,logs,stats)...${NC}"
  echo -e
  
  sudo rm -rf /opt/node/logs
  sudo rm -rf /opt/node/stats
  sudo rm -rf /opt/node/db
}

function update {
  sudo cp $GOPATH/src/github.com/ElrondNetwork/elrond-go/cmd/node/node /opt/go/bin/
  sudo cp $GOPATH/src/github.com/ElrondNetwork/elrond-config/* /opt/node/config
}

function keys {
  #Check for keys or build Key Generator and create unique node keys
  if [[ -f $NODE_KEYS_LOCATION/initialBalancesSk.pem && -f $NODE_KEYS_LOCATION/initialNodesSk.pem ]]; then
                       echo -e
                       echo -e "${GREEN}Found PEMs on host. Copying them to node config folder...${NC}"
                       echo -e
                       sudo cp $NODE_KEYS_LOCATION/*.pem /opt/node/config/ && sudo chown node:node /opt/node/config/*.pem 
  
               else
                 echo -e
                 echo -e "${GREEN}No PEMs present. Generating private node keys (node will be an observer)...${NC}"
                 echo -e
                 cd $GOPATH/src/github.com/ElrondNetwork/elrond-go/cmd/keygenerator
                 /snap/bin/go build
                 ./keygenerator
                 sudo mv *.pem /opt/node/config && sudo chown -R node:node /opt/node
    fi
  
}